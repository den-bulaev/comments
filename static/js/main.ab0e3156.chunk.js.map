{"version":3,"sources":["api/requests.ts","api/comments.ts","components/Form/Form.tsx","components/Comments/Comments.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["request","endpoint","options","fetch","then","response","ok","Error","status","statusText","json","result","data","addComment","productId","name","text","method","body","JSON","stringify","headers","add","getComments","Form","useState","username","setUserName","commentText","setCommentText","className","onSubmit","e","preventDefault","type","placeholder","required","value","onChange","fieldValue","target","React","memo","Comments","comments","map","id","Navbar","role","App","setComments","useEffect","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab0e3156.chunk.js","sourcesContent":["const BASE_URL = 'https://jordan.ashton.fashion/api/';\n\ntype Options = {\n  method: string,\n  body?: string,\n  headers?: {\n    'Content-type': string,\n  }\n}\n\nexport const request = (\n  endpoint: string, options: Options,\n): Promise<any> => {\n  const url = BASE_URL + endpoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then((result) => result.data);\n};\n\nexport const add = (\n  endpoint: string, name: string, text: string,\n): Promise<any> => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      text,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return request(endpoint, options);\n};\n\nexport const download = (\n  endpoint: string,\n): Promise<any> => {\n  const method = { method: 'GET' };\n\n  return request(endpoint, method);\n};\n","import { add, download } from './requests';\n\nexport const addComment = (\n  productId: number, name: string, text: string,\n): Promise<any> => add(`goods/${productId}/comments`, name, text);\n\nexport const getComments = (productId: number): Promise<any> => (\n  download(`goods/${productId}/comments`)\n);\n","import React, { ReactElement, useState } from 'react';\n\nimport { addComment } from '../../api/comments';\n\nimport './Form.scss';\n\nconst Form = (): ReactElement => {\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const handleChangeSetName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldValue = e.target.value;\n\n    setUserName(fieldValue);\n  };\n\n  const handleChangeSetText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const fieldValue = e.target.value;\n\n    setCommentText(fieldValue);\n  };\n\n  const handleSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    addComment(30, username, commentText);\n\n    setUserName('');\n    setCommentText('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input is-primary\"\n        name=\"name\"\n        placeholder=\"Type name\"\n        required\n        value={username}\n        onChange={handleChangeSetName}\n      />\n\n      <textarea\n        className=\"textarea is-primary\"\n        name=\"comment\"\n        placeholder=\"Type comment\"\n        required\n        value={commentText}\n        onChange={handleChangeSetText}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"button is-primary Form--button\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default React.memo(Form);\n","import React, { ReactElement, FC } from 'react';\n\nimport './Comments.scss';\n\ntype TComment = {\n  id: number,\n  name: string,\n  text: string,\n  visible: number,\n  'product_id': number,\n  'created_at': string,\n  'updated_at': string,\n}\n\ntype Props = {\n  comments: Array<TComment>,\n}\n\nconst Comments: FC<Props> = ({ comments }): ReactElement => (\n  <ul className=\"Comments\">\n    {comments.map(({ id, name, text }) => (\n      <li key={id} className=\"box Comments__item\">\n        <p className=\"block\">\n          <strong className=\"has-text-primary\">Name: </strong>\n          <span>{name}</span>\n        </p>\n\n        <strong className=\"has-text-primary\">Text:</strong>\n\n        <p className=\"block\">\n          {text}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default React.memo(Comments);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement } from 'react';\n\nimport './Navbar.scss';\n\nconst Navbar = (): ReactElement => (\n  <nav\n    className=\"pagination Navbar\"\n    role=\"navigation\"\n    aria-label=\"pagination\"\n  >\n    <a\n      className=\"pagination-previous\"\n    >\n      Previous\n    </a>\n\n    <a\n      className=\"pagination-next\"\n    >\n      Next page\n    </a>\n\n    <ul className=\"pagination-list\">\n      <li>\n        <a\n          className=\"pagination-link\"\n          aria-label=\"Goto page 1\"\n        >\n          1\n        </a>\n      </li>\n\n      <li>\n        <span className=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n\n      <li>\n        <a\n          className=\"pagination-link is-current\"\n          aria-label=\"Page 46\"\n          aria-current=\"page\"\n        >\n          46\n        </a>\n      </li>\n\n      <li>\n        <span className=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n\n      <li>\n        <a\n          className=\"pagination-link\"\n          aria-label=\"Goto page 86\"\n        >\n          86\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default React.memo(Navbar);\n","import React, { ReactElement, useEffect, useState } from 'react';\n\nimport Form from './components/Form/Form';\nimport Comments from './components/Comments/Comments';\nimport Navbar from './components/Navbar/Navbar';\n\nimport { getComments } from './api/comments';\n\nimport './App.scss';\n\nfunction App(): ReactElement {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getComments(30)\n      .then((response) => setComments(response));\n  }, []);\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"title is-1 has-text-primary\">\n        Simple app\n      </h1>\n\n      <section className=\"section App__container\">\n        <div className=\"App__block\">\n          <h2 className=\"subtitle is-2 has-text-primary\">\n            Add new comment\n          </h2>\n\n          <Form />\n        </div>\n\n        <div className=\"App__block\">\n          {comments.length > 0 && (\n            <>\n              <h2 className=\"subtitle is-2 has-text-primary\">\n                Comments\n              </h2>\n\n              <Comments comments={comments} />\n\n              <button\n                type=\"button\"\n                className=\"button is-primary App__show-more-button\"\n              >\n                Show more\n              </button>\n\n              <Navbar />\n            </>\n          )}\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}