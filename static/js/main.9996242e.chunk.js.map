{"version":3,"sources":["api/requests.ts","api/comments.ts","components/Form/Form.tsx","components/Comments/Comments.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["request","endpoint","options","fetch","then","response","ok","Error","status","statusText","json","result","addComment","productId","name","text","method","body","JSON","stringify","headers","add","getComments","pageNumber","Form","setCommentAdded","useState","username","setUserName","commentText","setCommentText","handleSubmit","e","a","preventDefault","prev","className","onSubmit","type","placeholder","required","value","onChange","fieldValue","target","React","memo","Comments","comments","map","id","Navbar","pagesAmount","setCurrentPage","currentPage","role","onClick","App","setComments","isCommentAdded","visibleCommentsAmount","setVisibleCommentsAmount","setPagesAmount","useEffect","data","last_page","length","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9996242e.chunk.js","sourcesContent":["const BASE_URL = 'https://jordan.ashton.fashion/api/';\n\ntype Options = {\n  method: string,\n  body?: string,\n  headers?: {\n    'Content-type': string,\n  }\n}\n\nexport const request = (\n  endpoint: string, options: Options,\n): Promise<any> => {\n  const url = BASE_URL + endpoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then((result) => result);\n};\n\nexport const add = (\n  endpoint: string, name: string, text: string,\n): Promise<any> => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      text,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return request(endpoint, options);\n};\n\nexport const download = (\n  endpoint: string,\n): Promise<any> => {\n  const method = { method: 'GET' };\n\n  return request(endpoint, method);\n};\n","import { add, download } from './requests';\n\nexport const addComment = (\n  productId: number, name: string, text: string,\n): Promise<any> => add(`goods/${productId}/comments`, name, text);\n\nexport const getComments = (\n  productId: number, pageNumber: number,\n): Promise<any> => (\n  download(`goods/${productId}/comments?page=${pageNumber}`)\n);\n","import React, { FC, useState } from 'react';\n\nimport { addComment } from '../../api/comments';\n\nimport './Form.scss';\n\ntype Props = {\n  setCommentAdded: (x: (y: boolean) => boolean) => void,\n};\n\nconst Form: FC<Props> = ({ setCommentAdded }) => {\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const handleChangeSetName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldValue = e.target.value;\n\n    setUserName(fieldValue);\n  };\n\n  const handleChangeSetText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const fieldValue = e.target.value;\n\n    setCommentText(fieldValue);\n  };\n\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await addComment(30, username, commentText);\n\n    setCommentAdded((prev) => !prev);\n\n    setUserName('');\n    setCommentText('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input is-primary\"\n        name=\"name\"\n        placeholder=\"Type name\"\n        required\n        value={username}\n        onChange={handleChangeSetName}\n      />\n\n      <textarea\n        className=\"textarea is-primary\"\n        name=\"comment\"\n        placeholder=\"Type comment\"\n        required\n        value={commentText}\n        onChange={handleChangeSetText}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"button is-primary Form--button\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default React.memo(Form);\n","import React, { FC } from 'react';\n\nimport './Comments.scss';\n\ntype TComment = {\n  id: number,\n  name: string,\n  text: string,\n  visible: number,\n  'product_id': number,\n  'created_at': string,\n  'updated_at': string,\n}\n\ntype Props = {\n  comments: Array<TComment>,\n}\n\nconst Comments: FC<Props> = ({ comments }) => (\n  <ul className=\"Comments\">\n    {comments.map(({ id, name, text }) => (\n      <li key={id} className=\"box Comments__item\">\n        <p className=\"block\">\n          <strong className=\"has-text-primary\">Name: </strong>\n          <span>{name}</span>\n        </p>\n\n        <strong className=\"has-text-primary\">Text:</strong>\n\n        <p className=\"block\">\n          {text}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default React.memo(Comments);\n","import React, { FC } from 'react';\n\nimport './Navbar.scss';\n\ntype Props = {\n  currentPage: number,\n  pagesAmount: number,\n  setCurrentPage: (x: ((y: number) => number) | number) => void,\n}\n\nconst Navbar: FC<Props> = (\n  { pagesAmount, setCurrentPage, currentPage },\n) => {\n  const handleClickNext = () => {\n    if (currentPage < pagesAmount) {\n      setCurrentPage((prev) => prev + 1);\n    }\n  };\n\n  const handleClickPrevious = () => {\n    if (currentPage >= 2) {\n      setCurrentPage((prev) => prev - 1);\n    }\n  };\n\n  const handleClickFirst = () => {\n    setCurrentPage(1);\n  };\n\n  const handleClickLast = () => {\n    setCurrentPage(pagesAmount);\n  };\n\n  return (\n    <nav\n      className=\"pagination Navbar\"\n      role=\"navigation\"\n      aria-label=\"pagination\"\n    >\n      <button\n        type=\"button\"\n        className=\"pagination-previous button\"\n        onClick={handleClickPrevious}\n      >\n        Previous\n      </button>\n\n      <button\n        type=\"button\"\n        className=\"pagination-next button\"\n        onClick={handleClickNext}\n      >\n        Next page\n      </button>\n\n      <ul className=\"pagination-list\">\n        <li>\n          <button\n            type=\"button\"\n            className=\"pagination-link button\"\n            onClick={handleClickFirst}\n          >\n            1\n          </button>\n        </li>\n\n        <li>\n          <span className=\"pagination-ellipsis\">&hellip;</span>\n        </li>\n\n        <li>\n          <button\n            type=\"button\"\n            className=\"pagination-link is-current button\"\n          >\n            {currentPage}\n          </button>\n        </li>\n\n        <li>\n          <span className=\"pagination-ellipsis\">&hellip;</span>\n        </li>\n\n        <li>\n          <button\n            type=\"button\"\n            className=\"pagination-link button\"\n            onClick={handleClickLast}\n          >\n            {pagesAmount}\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default React.memo(Navbar);\n","import React, {\n  FC, useEffect, useState,\n} from 'react';\n\nimport Form from './components/Form/Form';\nimport Comments from './components/Comments/Comments';\nimport Navbar from './components/Navbar/Navbar';\n\nimport { getComments } from './api/comments';\n\nimport './App.scss';\n\nconst step = 3; // comments to display\n\nconst App: FC = () => {\n  const [comments, setComments] = useState([]);\n  const [isCommentAdded, setCommentAdded] = useState(false);\n  const [visibleCommentsAmount, setVisibleCommentsAmount] = useState(step);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesAmount, setPagesAmount] = useState(0);\n\n  useEffect(() => {\n    getComments(30, currentPage)\n      .then((response) => {\n        setComments(response.data);\n        setPagesAmount(response.last_page);\n      });\n  }, [isCommentAdded, visibleCommentsAmount, currentPage]);\n\n  const handleClickMore = () => {\n    if (comments.length > visibleCommentsAmount) {\n      setVisibleCommentsAmount((prev) => prev + step);\n    }\n  };\n\n  const handleClickLess = () => {\n    if (visibleCommentsAmount > 0) {\n      setVisibleCommentsAmount((prev) => prev - step);\n    }\n  };\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"title is-1 has-text-primary\">\n        Comments app\n      </h1>\n\n      <section className=\"section App__container\">\n        <div className=\"App__block\">\n          <h2 className=\"subtitle is-2 has-text-primary\">\n            Add new comment\n          </h2>\n\n          <Form\n            setCommentAdded={setCommentAdded}\n          />\n        </div>\n\n        <div className=\"App__block\">\n          {comments.length > 0 && (\n            <>\n              <h2 className=\"subtitle is-2 has-text-primary\">\n                Comments\n              </h2>\n\n              <Comments comments={comments.slice(0, visibleCommentsAmount)} />\n\n              {visibleCommentsAmount < comments.length && (\n                <button\n                  type=\"button\"\n                  className=\"button is-primary App__comments-show-button\"\n                  onClick={handleClickMore}\n                >\n                  Show more\n                </button>\n              )}\n\n              {visibleCommentsAmount > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"button is-primary App__comments-show-button\"\n                  onClick={handleClickLess}\n                >\n                  Show less\n                </button>\n              )}\n\n              <Navbar\n                pagesAmount={pagesAmount}\n                setCurrentPage={setCurrentPage}\n                currentPage={currentPage}\n              />\n            </>\n          )}\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}