{"version":3,"sources":["api/requests.ts","api/comments.ts","components/Form/Form.tsx","components/Comments/Comments.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["request","endpoint","options","fetch","then","response","ok","Error","status","statusText","json","result","data","addComment","productId","name","text","method","body","JSON","stringify","headers","add","getComments","Form","isCommentAdded","setCommentAdded","useState","username","setUserName","commentText","setCommentText","handleSubmit","e","a","preventDefault","className","onSubmit","type","placeholder","required","value","onChange","fieldValue","target","React","memo","Comments","comments","map","id","Navbar","role","App","setComments","visibleCommentsAmount","setVisibleCommentsAmount","useEffect","length","slice","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAUaA,EAAU,SACrBC,EAAkBC,GAIlB,OAAOC,MAfQ,qCAaQF,EAELC,GACfE,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAEjBN,MAAK,SAACO,GAAD,OAAYA,EAAOC,SCrBhBC,EAAa,SACxBC,EAAmBC,EAAcC,GADT,ODwBP,SACjBf,EAAkBc,EAAcC,GAEhC,IAAMd,EAAU,CACde,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBL,OACAC,SAEFK,QAAS,CACP,eAAgB,oCAIpB,OAAOrB,EAAQC,EAAUC,GCpCRoB,CAAI,SAAD,OAAUR,EAAV,aAAgCC,EAAMC,IAE/CO,EAAc,SAACT,GAAD,ODsCzBb,ECrCS,SAAD,OAAUa,EAAV,qBDyCDd,EAAQC,EAFA,CAAEgB,OAAQ,QAHH,IACtBhB,G,eEjCIuB,EAAkB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,eAAgBC,EAAoC,EAApCA,gBACzC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAcMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEbtB,EAAW,GAAIe,EAAUE,GAFZ,OAInBJ,GAAiBD,GAEjBI,EAAY,IACZE,EAAe,IAPI,2CAAH,sDAUlB,OACE,uBAAMK,UAAU,OAAOC,SAAUL,EAAjC,UACE,uBACEM,KAAK,OACLF,UAAU,mBACVrB,KAAK,OACLwB,YAAY,YACZC,UAAQ,EACRC,MAAOb,EACPc,SA/BsB,SAACT,GAC3B,IAAMU,EAAaV,EAAEW,OAAOH,MAE5BZ,EAAYc,MA+BV,0BACEP,UAAU,sBACVrB,KAAK,UACLwB,YAAY,eACZC,UAAQ,EACRC,MAAOX,EACPY,SAlCsB,SAACT,GAC3B,IAAMU,EAAaV,EAAEW,OAAOH,MAE5BV,EAAeY,MAkCb,wBACEL,KAAK,SACLF,UAAU,iCAFZ,qBAUSS,MAAMC,KAAKtB,GClDpBuB,G,MAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC1B,oBAAIZ,UAAU,WAAd,SACGY,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAInC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACZ,qBAAaoB,UAAU,qBAAvB,UACE,oBAAGA,UAAU,QAAb,UACE,wBAAQA,UAAU,mBAAlB,oBACA,+BAAOrB,OAGT,wBAAQqB,UAAU,mBAAlB,mBAEA,mBAAGA,UAAU,QAAb,SACGpB,MATIkC,UAgBAL,MAAMC,KAAKC,GChCpBI,G,MAAS,kBACb,sBACEf,UAAU,oBACVgB,KAAK,aACL,aAAW,aAHb,UAKE,mBACEhB,UAAU,sBADZ,sBAMA,mBACEA,UAAU,kBADZ,uBAMA,qBAAIA,UAAU,kBAAd,UACE,6BACE,mBACEA,UAAU,kBACV,aAAW,cAFb,iBAQF,6BACE,sBAAMA,UAAU,sBAAhB,sBAGF,6BACE,mBACEA,UAAU,6BACV,aAAW,UACX,eAAa,OAHf,kBASF,6BACE,sBAAMA,UAAU,sBAAhB,sBAGF,6BACE,mBACEA,UAAU,kBACV,aAAW,eAFb,0BAWOS,MAAMC,KAAKK,G,MC6BXE,MA9Ef,WACE,MAAgC1B,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBM,EAAjB,KACA,EAA0C3B,oBAAS,GAAnD,mBAAOF,EAAP,KAAuBC,EAAvB,KACA,EAA0DC,mBAL/C,GAKX,mBAAO4B,EAAP,KAA8BC,EAA9B,KAmBA,OAjBAC,qBAAU,WACRlC,EAAY,IACTnB,MAAK,SAACC,GAAD,OAAciD,EAAYjD,QACjC,CAACoB,EAAgB8B,IAelB,uBAAMnB,UAAU,MAAhB,UACE,oBAAIA,UAAU,8BAAd,wBAIA,0BAASA,UAAU,yBAAnB,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,iCAAd,6BAIA,cAAC,EAAD,CACEX,eAAgBA,EAChBC,gBAAiBA,OAIrB,qBAAKU,UAAU,aAAf,SACGY,EAASU,OAAS,GACjB,qCACE,oBAAItB,UAAU,iCAAd,sBAIA,cAAC,EAAD,CAAUY,SAAUA,EAASW,MAAM,EAAGJ,KAErCA,EAAwBP,EAASU,QAChC,wBACEpB,KAAK,SACLF,UAAU,8CACVwB,QA3CQ,WAClBZ,EAASU,OAASH,GACpBC,EAAyBD,EAdlB,IAoDG,uBASDA,EAAwB,GACvB,wBACEjB,KAAK,SACLF,UAAU,8CACVwB,QA/CQ,WAClBL,EAAwB,GAC1BC,EAAyBD,EApBlB,IA8DG,uBASF,cAAC,EAAD,gBC9EdM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae14ece5.chunk.js","sourcesContent":["const BASE_URL = 'https://jordan.ashton.fashion/api/';\n\ntype Options = {\n  method: string,\n  body?: string,\n  headers?: {\n    'Content-type': string,\n  }\n}\n\nexport const request = (\n  endpoint: string, options: Options,\n): Promise<any> => {\n  const url = BASE_URL + endpoint;\n\n  return fetch(url, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then((result) => result.data);\n};\n\nexport const add = (\n  endpoint: string, name: string, text: string,\n): Promise<any> => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      text,\n    }),\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n  };\n\n  return request(endpoint, options);\n};\n\nexport const download = (\n  endpoint: string,\n): Promise<any> => {\n  const method = { method: 'GET' };\n\n  return request(endpoint, method);\n};\n","import { add, download } from './requests';\n\nexport const addComment = (\n  productId: number, name: string, text: string,\n): Promise<any> => add(`goods/${productId}/comments`, name, text);\n\nexport const getComments = (productId: number): Promise<any> => (\n  download(`goods/${productId}/comments?page=11`)\n);\n","import React, { ReactElement, FC, useState } from 'react';\n\nimport { addComment } from '../../api/comments';\n\nimport './Form.scss';\n\ntype Props = {\n  isCommentAdded: boolean,\n  setCommentAdded: (x: boolean) => void,\n};\n\nconst Form: FC<Props> = ({ isCommentAdded, setCommentAdded }): ReactElement => {\n  const [username, setUserName] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const handleChangeSetName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fieldValue = e.target.value;\n\n    setUserName(fieldValue);\n  };\n\n  const handleChangeSetText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const fieldValue = e.target.value;\n\n    setCommentText(fieldValue);\n  };\n\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await addComment(30, username, commentText);\n\n    setCommentAdded(!isCommentAdded);\n\n    setUserName('');\n    setCommentText('');\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input is-primary\"\n        name=\"name\"\n        placeholder=\"Type name\"\n        required\n        value={username}\n        onChange={handleChangeSetName}\n      />\n\n      <textarea\n        className=\"textarea is-primary\"\n        name=\"comment\"\n        placeholder=\"Type comment\"\n        required\n        value={commentText}\n        onChange={handleChangeSetText}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"button is-primary Form--button\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default React.memo(Form);\n","import React, { ReactElement, FC } from 'react';\n\nimport './Comments.scss';\n\ntype TComment = {\n  id: number,\n  name: string,\n  text: string,\n  visible: number,\n  'product_id': number,\n  'created_at': string,\n  'updated_at': string,\n}\n\ntype Props = {\n  comments: Array<TComment>,\n}\n\nconst Comments: FC<Props> = ({ comments }): ReactElement => (\n  <ul className=\"Comments\">\n    {comments.map(({ id, name, text }) => (\n      <li key={id} className=\"box Comments__item\">\n        <p className=\"block\">\n          <strong className=\"has-text-primary\">Name: </strong>\n          <span>{name}</span>\n        </p>\n\n        <strong className=\"has-text-primary\">Text:</strong>\n\n        <p className=\"block\">\n          {text}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default React.memo(Comments);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { ReactElement } from 'react';\n\nimport './Navbar.scss';\n\nconst Navbar = (): ReactElement => (\n  <nav\n    className=\"pagination Navbar\"\n    role=\"navigation\"\n    aria-label=\"pagination\"\n  >\n    <a\n      className=\"pagination-previous\"\n    >\n      Previous\n    </a>\n\n    <a\n      className=\"pagination-next\"\n    >\n      Next page\n    </a>\n\n    <ul className=\"pagination-list\">\n      <li>\n        <a\n          className=\"pagination-link\"\n          aria-label=\"Goto page 1\"\n        >\n          1\n        </a>\n      </li>\n\n      <li>\n        <span className=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n\n      <li>\n        <a\n          className=\"pagination-link is-current\"\n          aria-label=\"Page 46\"\n          aria-current=\"page\"\n        >\n          46\n        </a>\n      </li>\n\n      <li>\n        <span className=\"pagination-ellipsis\">&hellip;</span>\n      </li>\n\n      <li>\n        <a\n          className=\"pagination-link\"\n          aria-label=\"Goto page 86\"\n        >\n          86\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default React.memo(Navbar);\n","import React, {\n  ReactElement, useEffect, useState,\n} from 'react';\n\nimport Form from './components/Form/Form';\nimport Comments from './components/Comments/Comments';\nimport Navbar from './components/Navbar/Navbar';\n\nimport { getComments } from './api/comments';\n\nimport './App.scss';\n\nconst step = 3; // commets to display\n\nfunction App(): ReactElement {\n  const [comments, setComments] = useState([]);\n  const [isCommentAdded, setCommentAdded] = useState(false);\n  const [visibleCommentsAmount, setVisibleCommentsAmount] = useState(step);\n\n  useEffect(() => {\n    getComments(30)\n      .then((response) => setComments(response));\n  }, [isCommentAdded, visibleCommentsAmount]);\n\n  const handleClickMore = () => {\n    if (comments.length > visibleCommentsAmount) {\n      setVisibleCommentsAmount(visibleCommentsAmount + step);\n    }\n  };\n\n  const handleClickLess = () => {\n    if (visibleCommentsAmount > 0) {\n      setVisibleCommentsAmount(visibleCommentsAmount - step);\n    }\n  };\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"title is-1 has-text-primary\">\n        Simple app\n      </h1>\n\n      <section className=\"section App__container\">\n        <div className=\"App__block\">\n          <h2 className=\"subtitle is-2 has-text-primary\">\n            Add new comment\n          </h2>\n\n          <Form\n            isCommentAdded={isCommentAdded}\n            setCommentAdded={setCommentAdded}\n          />\n        </div>\n\n        <div className=\"App__block\">\n          {comments.length > 0 && (\n            <>\n              <h2 className=\"subtitle is-2 has-text-primary\">\n                Comments\n              </h2>\n\n              <Comments comments={comments.slice(0, visibleCommentsAmount)} />\n\n              {visibleCommentsAmount < comments.length && (\n                <button\n                  type=\"button\"\n                  className=\"button is-primary App__comments-show-button\"\n                  onClick={handleClickMore}\n                >\n                  Show more\n                </button>\n              )}\n\n              {visibleCommentsAmount > 0 && (\n                <button\n                  type=\"button\"\n                  className=\"button is-primary App__comments-show-button\"\n                  onClick={handleClickLess}\n                >\n                  Show less\n                </button>\n              )}\n\n              <Navbar />\n            </>\n          )}\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}